[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "polars_jdbc_tools"
version = "0.1.0"
description = "A comprehensive toolkit for working with JDBC connections in AWS environments using Polars"
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
authors = [
    {name = "mfilipelino"}
]
keywords = ["polars", "jdbc", "aws", "database", "sql", "glue"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "boto3>=1.28.0",
    "polars>=0.18.0",
    "sqlalchemy>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.0.270",
]

[project.urls]
Repository = "https://github.com/mfilipelino/pjt"
Issues = "https://github.com/mfilipelino/pjt/issues"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"

[tool.ruff]
line-length = 200
target-version = "py38"
fix = true

[tool.ruff.lint]
select = ["E", "F", "W", "I"]
ignore = []

[tool.ruff.lint.isort]
known-first-party = ["polars_jdbc_tools"]

[tool.coverage.run]
source = ["polars_jdbc_tools"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
]